// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SHM_Smart_Hospital_Management_.Data;

namespace SHM_Smart_Hospital_Management_.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220604121841_AddSurgeryRoomsAndSurgeriesTables")]
    partial class AddSurgeryRoomsAndSurgeriesTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Break_Tables.Medical_Allergy", b =>
                {
                    b.Property<int>("Allergy_Id")
                        .HasColumnType("int");

                    b.Property<int>("Medical_Detail_Id")
                        .HasColumnType("int");

                    b.HasKey("Allergy_Id", "Medical_Detail_Id");

                    b.HasIndex("Medical_Detail_Id");

                    b.ToTable("Medical_Allergies");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Break_Tables.Medical_Disease", b =>
                {
                    b.Property<int>("Disease_Id")
                        .HasColumnType("int");

                    b.Property<int>("Medical_Detail_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Chronic_Diseases")
                        .HasColumnType("bit");

                    b.Property<bool>("Family_Health_History")
                        .HasColumnType("bit");

                    b.HasKey("Disease_Id", "Medical_Detail_Id");

                    b.HasIndex("Medical_Detail_Id");

                    b.ToTable("Medical_Diseases");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.CityAndArea.Area", b =>
                {
                    b.Property<int>("Area_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("City_Id")
                        .HasColumnType("int");

                    b.HasKey("Area_Id");

                    b.HasIndex("City_Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.CityAndArea.City", b =>
                {
                    b.Property<int>("City_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("City_Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Allergy", b =>
                {
                    b.Property<int>("Allergy_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Allergy_Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Allergy_Id");

                    b.ToTable("Allergies");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Disease", b =>
                {
                    b.Property<int>("Disease_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Disease_Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Disease_Type_Id")
                        .HasColumnType("int");

                    b.HasKey("Disease_Id");

                    b.HasIndex("Disease_Type_Id");

                    b.ToTable("Diseases");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Disease_Type", b =>
                {
                    b.Property<int>("Disease_Type_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Disease_Type_Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Disease_Type_Id");

                    b.ToTable("Diseases_Types");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.External_Records", b =>
                {
                    b.Property<int>("External_Records_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Medical_Detail_Id")
                        .HasColumnType("int");

                    b.HasKey("External_Records_Id");

                    b.HasIndex("Medical_Detail_Id");

                    b.ToTable("External_Records");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Medical_Ray", b =>
                {
                    b.Property<int>("Ray_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Medical_Detail_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Ray_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ray_Result")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Ray_Type_Id")
                        .HasColumnType("int");

                    b.HasKey("Ray_Id");

                    b.HasIndex("Medical_Detail_Id");

                    b.HasIndex("Ray_Type_Id");

                    b.ToTable("Medical_Rays");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Medical_Test", b =>
                {
                    b.Property<int>("Medical_Test_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Medical_Detail_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Test_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Test_Id")
                        .HasColumnType("int");

                    b.Property<string>("Test_Result")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Medical_Test_Id");

                    b.HasIndex("Medical_Detail_Id");

                    b.HasIndex("Test_Id");

                    b.ToTable("Medical_Tests");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Ray_Type", b =>
                {
                    b.Property<int>("Ray_Type_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ray_Type_Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Ray_Type_Id");

                    b.ToTable("Ray_Types");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Specialization", b =>
                {
                    b.Property<int>("Specialization_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Specialization_Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Specialization_Id");

                    b.ToTable("Specializations");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Test", b =>
                {
                    b.Property<int>("Test_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Test_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Test_Type_Id")
                        .HasColumnType("int");

                    b.HasKey("Test_Id");

                    b.HasIndex("Test_Type_Id");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Test_Type", b =>
                {
                    b.Property<int>("Test_Type_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Test_Type_Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Test_Type_Id");

                    b.ToTable("Test_Types");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Bill", b =>
                {
                    b.Property<int>("Bill_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Bill_Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Bill_Examination")
                        .HasColumnType("float");

                    b.Property<double?>("Bill_Medical_Test")
                        .HasColumnType("float");

                    b.Property<double?>("Bill_Medication")
                        .HasColumnType("float");

                    b.Property<double?>("Bill_Rays")
                        .HasColumnType("float");

                    b.Property<double?>("Bill_Room_Service")
                        .HasColumnType("float");

                    b.Property<double?>("Bill_Surgeries")
                        .HasColumnType("float");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<int>("Patient_Id")
                        .HasColumnType("int");

                    b.HasKey("Bill_Id");

                    b.HasIndex("Patient_Id");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Death_Case", b =>
                {
                    b.Property<int>("Death_Case_Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Death_Cause")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Death_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Patient_Id")
                        .HasColumnType("int");

                    b.HasKey("Death_Case_Number");

                    b.HasIndex("Patient_Id");

                    b.ToTable("Death_Cases");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Department", b =>
                {
                    b.Property<int>("Department_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Department_Name")
                        .HasColumnType("int");

                    b.Property<int?>("Dept_Mgr_Id")
                        .HasColumnType("int");

                    b.Property<int>("Ho_Id")
                        .HasColumnType("int");

                    b.HasKey("Department_Id");

                    b.HasIndex("Department_Name");

                    b.HasIndex("Dept_Mgr_Id");

                    b.HasIndex("Ho_Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Doctor", b =>
                {
                    b.Property<int>("Doctor_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("Area_Id")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Department_Id")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("Doctor_Birth_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Doctor_Birth_Place")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Doctor_Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Doctor_Family_Members")
                        .HasColumnType("int");

                    b.Property<string>("Doctor_First_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Doctor_Gender")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime>("Doctor_Hire_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Doctor_Last_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Doctor_Middle_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Doctor_National_Number")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Doctor_Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Doctor_Qualifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Doctor_Social_Status")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Doctor_Id");

                    b.HasIndex("Area_Id");

                    b.HasIndex("Department_Id");

                    b.HasIndex("Doctor_Birth_Place");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Employee", b =>
                {
                    b.Property<int>("Employee_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Area_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Employee_Birth_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Employee_Birth_Place")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Employee_Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Employee_Family_Members")
                        .HasColumnType("int");

                    b.Property<string>("Employee_First_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Employee_Gender")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime>("Employee_Hire_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Employee_Job")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Employee_Last_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Employee_Middle_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Employee_National_Number")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Employee_Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Employee_Social_Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Employee_X_Y")
                        .IsRequired()
                        .HasMaxLength(61)
                        .HasColumnType("nvarchar(61)");

                    b.Property<int>("Ho_Id")
                        .HasColumnType("int");

                    b.HasKey("Employee_Id");

                    b.HasIndex("Area_Id");

                    b.HasIndex("Employee_Birth_Place");

                    b.HasIndex("Ho_Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Hospital", b =>
                {
                    b.Property<int>("Ho_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Area_Id")
                        .HasColumnType("int");

                    b.Property<string>("Ho_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Ho_Subscribtion_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Mgr_Id")
                        .HasColumnType("int");

                    b.HasKey("Ho_Id");

                    b.HasIndex("Area_Id");

                    b.HasIndex("Mgr_Id");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Medical_Detail", b =>
                {
                    b.Property<int>("Medical_Details_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MD_Patient_Blood_Type")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("MD_Patient_Special_Needs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MD_Patient_Treatment_Plans_And_Daily_Supplements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Patient_Id")
                        .HasColumnType("int");

                    b.HasKey("Medical_Details_Id");

                    b.HasIndex("Patient_Id");

                    b.ToTable("Medical_Details");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Patient", b =>
                {
                    b.Property<int>("Patient_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Area_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Canceled")
                        .HasColumnType("bit");

                    b.Property<int>("Ho_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Patient_Birth_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Patient_Birth_Place")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Patient_Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Patient_First_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Patient_Gender")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Patient_Last_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Patient_Middle_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Patient_National_Number")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Patient_Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Patient_Social_Status")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Patient_X_Y")
                        .IsRequired()
                        .HasMaxLength(61)
                        .HasColumnType("nvarchar(61)");

                    b.Property<int?>("PreviewCount")
                        .HasColumnType("int");

                    b.Property<bool>("Sent")
                        .HasColumnType("bit");

                    b.HasKey("Patient_Id");

                    b.HasIndex("Area_Id");

                    b.HasIndex("Ho_Id");

                    b.HasIndex("Patient_Birth_Place");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Preview", b =>
                {
                    b.Property<int>("Preview_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Caring")
                        .HasColumnType("bit");

                    b.Property<int?>("Doctor_Id")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ExaminationRecord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Patient_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Preview_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Preview_Id");

                    b.HasIndex("Doctor_Id");

                    b.HasIndex("Patient_Id");

                    b.ToTable("Previews");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Request", b =>
                {
                    b.Property<int>("Request_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Accept")
                        .HasColumnType("bit");

                    b.Property<int?>("Doctor_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Employee_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Patient_Id")
                        .HasColumnType("int");

                    b.Property<string>("Request_Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Request_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Request_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Request_Type")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Request_Id");

                    b.HasIndex("Doctor_Id");

                    b.HasIndex("Employee_Id");

                    b.HasIndex("Patient_Id");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Reservation", b =>
                {
                    b.Property<int>("Reservation_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Patient_Id")
                        .HasColumnType("int");

                    b.Property<int>("Room_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Reservation_Id");

                    b.HasIndex("Patient_Id");

                    b.HasIndex("Room_Id");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Room", b =>
                {
                    b.Property<int>("Room_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Ho_Id")
                        .HasColumnType("int");

                    b.Property<int>("Room_Beds_Count")
                        .HasColumnType("int");

                    b.Property<bool>("Room_Empty")
                        .HasColumnType("bit");

                    b.Property<int>("Room_Floor")
                        .HasColumnType("int");

                    b.Property<string>("Room_Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Room_Id");

                    b.HasIndex("Ho_Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Surgery", b =>
                {
                    b.Property<int>("Surgery_Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Doctor_Id")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("Patient_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Surgery_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surgery_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Surgery_Room_Id")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Surgery_Time")
                        .HasColumnType("time");

                    b.HasKey("Surgery_Number");

                    b.HasIndex("Doctor_Id");

                    b.HasIndex("Patient_Id");

                    b.HasIndex("Surgery_Room_Id");

                    b.ToTable("Surgeries");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Surgery_Room", b =>
                {
                    b.Property<int>("Surgery_Room_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Ho_Id")
                        .HasColumnType("int");

                    b.Property<int>("Su_Room_Floor")
                        .HasColumnType("int");

                    b.Property<string>("Su_Room_Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Surgery_Room_Ready")
                        .HasColumnType("bit");

                    b.HasKey("Surgery_Room_Id");

                    b.HasIndex("Ho_Id");

                    b.ToTable("Surgery_Rooms");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.PhoneNumbers.Doctor_Phone_Numbers", b =>
                {
                    b.Property<int>("Doctor_Id")
                        .HasColumnType("int");

                    b.Property<string>("Doctor_Phone_Number")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Doctor_Id", "Doctor_Phone_Number");

                    b.ToTable("Doctor_Phone_Numbers");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.PhoneNumbers.Employee_Phone_Numbers", b =>
                {
                    b.Property<int>("Employee_Id")
                        .HasColumnType("int");

                    b.Property<string>("Employee_Phone_Number")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Employee_Id", "Employee_Phone_Number");

                    b.ToTable("Employee_Phone_Numbers");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.PhoneNumbers.Hospital_Phone_Numbers", b =>
                {
                    b.Property<int>("Ho_Id")
                        .HasColumnType("int");

                    b.Property<string>("Hospital_Phone_Number")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Ho_Id", "Hospital_Phone_Number");

                    b.ToTable("Hospital_Phone_Numbers");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.PhoneNumbers.Patient_Phone_Numbers", b =>
                {
                    b.Property<int>("Patient_Id")
                        .HasColumnType("int");

                    b.Property<string>("Patient_Phone_Number")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Patient_Id", "Patient_Phone_Number");

                    b.ToTable("Patient_Phone_Numbers");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Break_Tables.Medical_Allergy", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Allergy", null)
                        .WithMany("Medical_Allergies")
                        .HasForeignKey("Allergy_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Medical_Detail", null)
                        .WithMany("Medical_Allergies")
                        .HasForeignKey("Medical_Detail_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Break_Tables.Medical_Disease", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Disease", null)
                        .WithMany("Medical_Diseases")
                        .HasForeignKey("Disease_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Medical_Detail", null)
                        .WithMany("Medical_Diseases")
                        .HasForeignKey("Medical_Detail_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.CityAndArea.Area", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.CityAndArea.City", null)
                        .WithMany("Areas")
                        .HasForeignKey("City_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Disease", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Disease_Type", null)
                        .WithMany("Diseases")
                        .HasForeignKey("Disease_Type_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.External_Records", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Medical_Detail", null)
                        .WithMany("External_Records")
                        .HasForeignKey("Medical_Detail_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Medical_Ray", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Medical_Detail", null)
                        .WithMany("Medical_Rays")
                        .HasForeignKey("Medical_Detail_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Ray_Type", null)
                        .WithMany("Medical_Rays")
                        .HasForeignKey("Ray_Type_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Medical_Test", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Medical_Detail", null)
                        .WithMany("Medical_Tests")
                        .HasForeignKey("Medical_Detail_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Test", null)
                        .WithMany("Medical_Tests")
                        .HasForeignKey("Test_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Test", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Test_Type", null)
                        .WithMany("Tests")
                        .HasForeignKey("Test_Type_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Bill", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Patient", null)
                        .WithMany("Patient_Bills")
                        .HasForeignKey("Patient_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Death_Case", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Patient", "Dead_Patient")
                        .WithMany()
                        .HasForeignKey("Patient_Id");

                    b.Navigation("Dead_Patient");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Department", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Specialization", null)
                        .WithMany("Departments")
                        .HasForeignKey("Department_Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Doctor", "Dept_Manager")
                        .WithMany()
                        .HasForeignKey("Dept_Mgr_Id");

                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Hospital", null)
                        .WithMany("Hospital_Departments")
                        .HasForeignKey("Ho_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dept_Manager");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Doctor", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.CityAndArea.Area", null)
                        .WithMany("Doctors")
                        .HasForeignKey("Area_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Department", null)
                        .WithMany("Department_Doctors")
                        .HasForeignKey("Department_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SHM_Smart_Hospital_Management_.CityAndArea.City", null)
                        .WithMany("Doctors")
                        .HasForeignKey("Doctor_Birth_Place")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Employee", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.CityAndArea.Area", null)
                        .WithMany("Employees")
                        .HasForeignKey("Area_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SHM_Smart_Hospital_Management_.CityAndArea.City", null)
                        .WithMany("Employees")
                        .HasForeignKey("Employee_Birth_Place")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Hospital", null)
                        .WithMany("Ho_Employees")
                        .HasForeignKey("Ho_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Hospital", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.CityAndArea.Area", null)
                        .WithMany("Hospitals")
                        .HasForeignKey("Area_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("Mgr_Id");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Medical_Detail", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("Patient_Id");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Patient", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.CityAndArea.Area", null)
                        .WithMany("Patients")
                        .HasForeignKey("Area_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Hospital", null)
                        .WithMany("Ho_Patients")
                        .HasForeignKey("Ho_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SHM_Smart_Hospital_Management_.CityAndArea.City", null)
                        .WithMany("Patients")
                        .HasForeignKey("Patient_Birth_Place")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Preview", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Doctor", null)
                        .WithMany("Doctor_Previews")
                        .HasForeignKey("Doctor_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Patient", null)
                        .WithMany("Patient_Previews")
                        .HasForeignKey("Patient_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Request", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Doctor", null)
                        .WithMany("Doctor_Requests")
                        .HasForeignKey("Doctor_Id");

                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Employee", null)
                        .WithMany("Employee_Requests")
                        .HasForeignKey("Employee_Id");

                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Patient", null)
                        .WithMany("Patient_Requests")
                        .HasForeignKey("Patient_Id");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Reservation", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Patient", null)
                        .WithMany("Patient_Reservations")
                        .HasForeignKey("Patient_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Room", null)
                        .WithMany("Room_Reservations")
                        .HasForeignKey("Room_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Room", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Hospital", null)
                        .WithMany("Hospital_Rooms")
                        .HasForeignKey("Ho_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Surgery", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Doctor", null)
                        .WithMany("Doctor_Surgeries")
                        .HasForeignKey("Doctor_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Patient", null)
                        .WithMany("Patient_Surgeries")
                        .HasForeignKey("Patient_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Surgery_Room", null)
                        .WithMany("Surgery_Room_Surgeries")
                        .HasForeignKey("Surgery_Room_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Surgery_Room", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Hospital", null)
                        .WithMany("Hospital_Surgery_Rooms")
                        .HasForeignKey("Ho_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.PhoneNumbers.Doctor_Phone_Numbers", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Doctor", null)
                        .WithMany("Doctor_Phone_Numbers")
                        .HasForeignKey("Doctor_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.PhoneNumbers.Employee_Phone_Numbers", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Employee", null)
                        .WithMany("Employee_Phone_Numbers")
                        .HasForeignKey("Employee_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.PhoneNumbers.Hospital_Phone_Numbers", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Hospital", null)
                        .WithMany("Hospital_Phone_Numbers")
                        .HasForeignKey("Ho_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.PhoneNumbers.Patient_Phone_Numbers", b =>
                {
                    b.HasOne("SHM_Smart_Hospital_Management_.Models.Patient", null)
                        .WithMany("Patient_Phone_Numbers")
                        .HasForeignKey("Patient_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.CityAndArea.Area", b =>
                {
                    b.Navigation("Doctors");

                    b.Navigation("Employees");

                    b.Navigation("Hospitals");

                    b.Navigation("Patients");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.CityAndArea.City", b =>
                {
                    b.Navigation("Areas");

                    b.Navigation("Doctors");

                    b.Navigation("Employees");

                    b.Navigation("Patients");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Allergy", b =>
                {
                    b.Navigation("Medical_Allergies");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Disease", b =>
                {
                    b.Navigation("Medical_Diseases");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Disease_Type", b =>
                {
                    b.Navigation("Diseases");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Ray_Type", b =>
                {
                    b.Navigation("Medical_Rays");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Specialization", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Test", b =>
                {
                    b.Navigation("Medical_Tests");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.MedicalDetailsExtraTables.Test_Type", b =>
                {
                    b.Navigation("Tests");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Department", b =>
                {
                    b.Navigation("Department_Doctors");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Doctor", b =>
                {
                    b.Navigation("Doctor_Phone_Numbers");

                    b.Navigation("Doctor_Previews");

                    b.Navigation("Doctor_Requests");

                    b.Navigation("Doctor_Surgeries");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Employee", b =>
                {
                    b.Navigation("Employee_Phone_Numbers");

                    b.Navigation("Employee_Requests");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Hospital", b =>
                {
                    b.Navigation("Ho_Employees");

                    b.Navigation("Ho_Patients");

                    b.Navigation("Hospital_Departments");

                    b.Navigation("Hospital_Phone_Numbers");

                    b.Navigation("Hospital_Rooms");

                    b.Navigation("Hospital_Surgery_Rooms");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Medical_Detail", b =>
                {
                    b.Navigation("External_Records");

                    b.Navigation("Medical_Allergies");

                    b.Navigation("Medical_Diseases");

                    b.Navigation("Medical_Rays");

                    b.Navigation("Medical_Tests");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Patient", b =>
                {
                    b.Navigation("Patient_Bills");

                    b.Navigation("Patient_Phone_Numbers");

                    b.Navigation("Patient_Previews");

                    b.Navigation("Patient_Requests");

                    b.Navigation("Patient_Reservations");

                    b.Navigation("Patient_Surgeries");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Room", b =>
                {
                    b.Navigation("Room_Reservations");
                });

            modelBuilder.Entity("SHM_Smart_Hospital_Management_.Models.Surgery_Room", b =>
                {
                    b.Navigation("Surgery_Room_Surgeries");
                });
#pragma warning restore 612, 618
        }
    }
}
